<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Eumel.Dj.Mobile.Views.PlaylistPage"
             xmlns:vm="clr-namespace:Eumel.Dj.Mobile.ViewModels"
             xmlns:models="clr-namespace:Eumel.Dj.Mobile.Models;assembly=Eumel.Dj.Mobile"
             xmlns:data="clr-namespace:Eumel.Dj.Mobile.Data"  
             Title="{Binding Title}"
             x:DataType="vm:PlaylistViewModel">

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Play" Command="{Binding PlayPlayerCommand}" />
    </ContentPage.ToolbarItems>

    <RefreshView x:DataType="vm:PlaylistViewModel" Command="{Binding LoadPlaylistCommand}" IsRefreshing="{Binding IsBusy, Mode=TwoWay}">
        <CollectionView x:Name="ItemsListView"
                        ItemsSource="{Binding Items}"
                        SelectionMode="None">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Grid x:DataType="models:PlaylistSongItem" Padding="2">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static models:SongType.Past}" TargetType="{x:Type Grid}">
                                        <Setter Property="BackgroundColor" Value="DimGray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static models:SongType.Current}" TargetType="{x:Type Grid}">
                                        <Setter Property="BackgroundColor" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static models:SongType.Upcomming}" TargetType="{x:Type Grid}">
                                        <Setter Property="BackgroundColor" Value="GhostWhite"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="48" />
                        </Grid.ColumnDefinitions>

                        <Label Text="{Binding Title}" 
                               LineBreakMode="NoWrap" 
                               Style="{DynamicResource ListItemTextStyle}" 
                               FontSize="16"
                               Grid.Column="0" Grid.Row="0" />
                        <Label Text="{Binding Description}" 
                               LineBreakMode="NoWrap"
                               Style="{DynamicResource ListItemDetailTextStyle}"
                               FontSize="13" 
                               Grid.Column="0" Grid.Row="1" />

                        <ImageButton  BackgroundColor="Transparent"
                                      Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="2" Margin="5">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialDesign" Glyph="{Static data:IconFont.Heart}" Color="{DynamicResource HeartNonFill}"/>
                            </ImageButton.Source>

                            <ImageButton.Style>
                                <Style TargetType="{x:Type ImageButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasVotes}" Value="True" TargetType="{x:Type ImageButton}">
                                            <Setter Property="IsVisible" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=HasVotes}" Value="False" TargetType="{x:Type ImageButton}">
                                            <Setter Property="IsVisible" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=VotedByMe}" Value="False" TargetType="{x:Type ImageButton}">
                                            <Setter Property="Source">
                                                <FontImageSource FontFamily="MaterialDesign" Glyph="{Static data:IconFont.Heart}" Color="{DynamicResource HeartNonFill}"/>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=VotedByMe}" Value="True" TargetType="{x:Type ImageButton}">
                                            <Setter Property="Source">
                                                <FontImageSource FontFamily="MaterialDesign" Glyph="{Static data:IconFont.Heart}" Color="{DynamicResource HeartFill}"/>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ImageButton.Style>

                        </ImageButton>

                        <Label Text="{Binding VoteCount}" VerticalTextAlignment="Center" HorizontalTextAlignment="Center"
                               Grid.Column="1" Grid.Row="0"  Grid.RowSpan="2">
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasVotes}" Value="False" TargetType="{x:Type Label}">
                                            <Setter Property="TextColor" Value="Transparent" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer 
                                NumberOfTapsRequired="1"
                                Command="{Binding Source={RelativeSource AncestorType={x:Type vm:PlaylistViewModel}}, Path=ItemTapped}"		
                                CommandParameter="{Binding .}" />
                        </Grid.GestureRecognizers>

                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
    </RefreshView>

</ContentPage>
